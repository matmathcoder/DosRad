# Generated by Django 5.2.5 on 2025-09-05 00:04

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('projects', '0002_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='CompoundObject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('file_path', models.CharField(max_length=500)),
                ('file_size', models.BigIntegerField(default=0)),
                ('version', models.CharField(default='1.0.0', max_length=20)),
                ('created_by', models.CharField(blank=True, max_length=255)),
                ('tags', models.JSONField(default=list)),
                ('volumes_count', models.IntegerField(default=0)),
                ('compositions_count', models.IntegerField(default=0)),
                ('spectra_count', models.IntegerField(default=0)),
                ('sensors_count', models.IntegerField(default=0)),
                ('is_template', models.BooleanField(default=False)),
                ('is_public', models.BooleanField(default=False)),
                ('category', models.CharField(default='General', max_length=100)),
                ('last_modified', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='compound_objects', to='projects.project')),
            ],
            options={
                'ordering': ['-last_modified'],
                'unique_together': {('project', 'name')},
            },
        ),
        migrations.CreateModel(
            name='CompoundObjectComposition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('composition_data', models.JSONField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('compound_object', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='compositions', to='projects.compoundobject')),
                ('original_composition', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='projects.composition')),
            ],
            options={
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='CompoundObjectGeometry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('geometry_data', models.JSONField()),
                ('order', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('compound_object', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='geometries', to='projects.compoundobject')),
                ('original_geometry', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='projects.geometry')),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='CompoundObjectImport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position', models.JSONField(default=dict)),
                ('rotation', models.JSONField(default=dict)),
                ('scale', models.JSONField(default=dict)),
                ('name_conflicts', models.JSONField(default=dict)),
                ('imported_geometries', models.JSONField(default=list)),
                ('imported_compositions', models.JSONField(default=list)),
                ('imported_spectra', models.JSONField(default=list)),
                ('imported_sensors', models.JSONField(default=list)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('compound_object', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='imports', to='projects.compoundobject')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='compound_imports', to='projects.project')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CompoundObjectSpectrum',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('spectrum_data', models.JSONField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('compound_object', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='spectra', to='projects.compoundobject')),
                ('original_spectrum', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='projects.spectrum')),
            ],
            options={
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='Sensor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=8)),
                ('coordinates', models.JSONField()),
                ('buildup_type', models.CharField(choices=[('automatic', 'Automatic'), ('composition', 'For given composition'), ('none', 'No build-up factor')], default='automatic', max_length=20)),
                ('equi_importance', models.BooleanField(default=False)),
                ('response_function', models.CharField(choices=[('ambient_dose', 'Ambient dose equivalent rate'), ('effective_dose', 'Effective (anterior posterior) dose rate'), ('kerma_air', 'KERMA rate in Air (μGy/h)'), ('kerma_rad', 'KERMA rate in Air (mrad/h)'), ('exposure', 'Exposure (mR/h)'), ('energy_flux', 'Energy flux rate (MeV/s)'), ('uncollided_flux', 'Uncollided flux (gammas/cm²/s)')], default='ambient_dose', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sensors', to='projects.project')),
                ('selected_composition', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='projects.composition')),
            ],
            options={
                'ordering': ['created_at'],
                'unique_together': {('project', 'name')},
            },
        ),
        migrations.CreateModel(
            name='CompoundObjectSensor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sensor_data', models.JSONField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('compound_object', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sensors', to='projects.compoundobject')),
                ('original_sensor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='projects.sensor')),
            ],
            options={
                'ordering': ['created_at'],
            },
        ),
    ]
